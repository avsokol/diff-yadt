################################################################################
#
#  make_yadt.tcl - contains procedures used to create yadt starkit
#
#
#  Copyright EMC Corp., 2010
#
#
# 
################################################################################

package provide MakeYadt 1.0

namespace eval ::MakeYadt {

}

#===============================================================================

proc ::MakeYadt::Get_Common_Files_List { syren_src_dir } {

    set src_files_list {}

    set files_list [ list \
                         client_server.tcl \
                         common_tools.tcl \
                         ext_utils_common.tcl \
                         hostname_resolver.tcl \
                         utils.tcl \
                         ya_lcs.tcl \
                         yadt.tcl \
                         tcllib/lib/tcllib1.3/cmdline/pkgIndex.tcl \
                         tcllib/lib/tcllib1.3/cmdline/cmdline.tcl \
                         tcllib/lib/tcllib1.3/cmdline/typedCmdline.tcl \
                         tcllib/lib/tcllib1.3/pkgIndex.tcl \
                         tcllib/lib/tcllib1.3/struct/pkgIndex.tcl \
                         tcllib/lib/tcllib1.3/struct/struct.tcl \
                         tcllib/lib/tcllib1.3/struct/list.tcl
                        ]
    foreach file $files_list {
        lappend src_files_list $file
    }

    set src_dir [ file join BWidget.1.8.0 images ]
    set files_list [ list \
                         error.gif \
                         info.gif \
                         question.gif \
                         warning.gif \
                        ]
    foreach file $files_list {
        lappend src_files_list [ file join $src_dir $file ]
    }

    # Add files from a few directories according to pattern corresponding to each directory:

    set pattern($syren_src_dir/BWidget.1.8.0)      *.tcl
    set pattern($syren_src_dir/BWidget.1.8.0/lang) *.rc

    set start [ expr [ string length $syren_src_dir ] + 1 ]

    foreach src_dir  [ array names pattern ] {
        foreach full_fname [ glob -directory $src_dir $pattern($src_dir) ] {
            set fname [ string range $full_fname $start end ]
            if { $fname != "" } {
                lappend src_files_list $fname
            }
        }
    }

    lappend src_files_list [ ::CmnTools::Get_CVS_Status_Report_File_Name ]

    return $src_files_list
}

#===============================================================================

proc ::MakeYadt::Get_Platform_Specific_Files_List { platform syren_src_dir } {

    return {}
}

#===============================================================================

proc ::MakeYadt::Retrieve_Files_From_DB { platform dst_dir } {

    set dst_files_list {}

    switch -- $platform {
        windows {
            set hw_platform $platform
            set os "default"
        }
        Linux {
            set hw_platform "unix"
            set os $platform
        }
        default {
            return -code error "Unexpected platform <$platform>"
        }
    }

    set difftools_dir [ file join $dst_dir difftools ]

    set content {}
    foreach utility [ list cvs diff ] {
        set util_file [ ::ExtUtilsCmn::Extract_Utility_To_Directory \
                            $utility \
                            $difftools_dir \
                            -platform $hw_platform \
                            -os $os ]
        lappend dst_files_list [ file join $difftools_dir $util_file ]
        append content "$utility $util_file\n"
    }

    set rcfile [ file join $difftools_dir .toolsrc ]

    ::fUtils::Write_File $rcfile $content

    lappend dst_files_list $rcfile

    return $dst_files_list
}

#===============================================================================
